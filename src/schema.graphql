type Books {
        isbn: Int!
        title: String
        price: Float
        quantity: Int
        publisher_id: Int
        publisher: Publishers!
}
type Publishers {
    id: Int!
    name: String
    year_publication: Int
}
type Readers {
    id: Int!
    name: String
    email: String
    password: String
    address: String
    phone: String
}
type CheckedOut {
    id: Int!
    isbn_book: Int
    book: [Books!]!
    reader_id: Int
    reader: [Readers!]!
    checkedout_date: String
    returned: Boolean
    returned_date: String
    duration: Int
}

type AuthPayload {
    token: String
    user: Readers
}

type Query {
    book: [Books]
}

type Mutation {
    signup(name: String!, email: String!, password: String!, address: String, phone: String): AuthPayload
    login(email: String!, password: String!): AuthPayload
}